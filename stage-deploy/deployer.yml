---
.deploy_global_template: &deploy_global
  stage: deploy
  when: manual
  image: $CI_REGISTRY/onyourmarks/public/oym-docker-deploy-image:$PHP_VERSION
  allow_failure: false
  cache:
    - key: 'asset_build-$CI_COMMIT_REF_NAME-build'
      paths:
        - $BUILD_FOLDER
      policy: pull
      unprotect: true
    - key:
        files:
          - composer.lock
        prefix: composer-vendors
      paths:
        - $VENDOR_FOLDER
      policy: pull
      unprotect: true
  needs:
    - job: build:composer
      optional: true
    - job: build:assets
      optional: true
  environment:
    name: $DEPLOY_ENVIRONMENT
    url: https://$PRIMARY_SITE_URL
    action: start
  before_script:
    - !reference [.ssh_host_connection, before_script]
    - 'wget https://getcomposer.org/download/2.6.5/composer.phar'
  script:
    - '[[ -f $PRODUCTION_ENV_FILE ]] && sed -i "s/\$VAR_COMMIT_ID/$CI_COMMIT_SHORT_SHA/" $PRODUCTION_ENV_FILE'
    - '[[ -f $STAGING_ENV_FILE ]] && sed -i "s/\$VAR_COMMIT_ID/$CI_COMMIT_SHORT_SHA/" $STAGING_ENV_FILE'
    - '[[ -f before-deploy.sh ]] && sh before-deploy.sh $DEPLOY_ENVIRONMENT'
    - 'dep deploy $DEPLOY_ENVIRONMENT --branch=$CI_COMMIT_REF_NAME -v'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: manual

deploy:production:
  <<: *deploy_global
  variables:
    DEPLOY_ENVIRONMENT: production
    PRIMARY_SITE_URL: $PRIMARY_SITE_URL_PRODUCTION

deploy:staging:
  <<: *deploy_global
  variables:
    DEPLOY_ENVIRONMENT: staging
    PRIMARY_SITE_URL: $PRIMARY_SITE_URL_STAGING
