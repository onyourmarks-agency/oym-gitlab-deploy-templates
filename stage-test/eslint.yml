eslint:
  stage: test
  variables:
    GIT_STRATEGY: fetch
  needs:
    - job: assets_build
      artifacts: true
      optional: true
  resource_group: 'fe_ci_test'
  before_script:
    - "NPM_NODE_VERSION=$(node -p \"require('./package.json').config.node\")"
    - 'echo Node version: $NPM_NODE_VERSION'
    - 'nvm install $NPM_NODE_VERSION'
    - 'nvm use $NPM_NODE_VERSION'
    - 'npm install -g pnpm@$PNPM_VERSION.* eslint webpack-cli@$WEBPACK_CLI_VERSION.*'
    - 'npm config set store-dir $PNPM_CACHE_FOLDER'
    - 'pnpm set verify-store-integrity false'
    - 'pnpm config set store-dir $PNPM_CACHE_FOLDER'
    - 'pnpm install --frozen-lockfile'
  script:
  script:
    - 'PWDESC=$(echo $PWD | sed "s_/_\\\/_g")'
    - 'echo $(cat .eslintcache |  sed  -e "s/$PWDESC/REPLACEPATH/g") > .eslintcache'
    - 'pnpm eslint'
    - 'echo $(cat .eslintcache |  sed  -e "s/REPLACEPATH/$PWDESC/g") > .eslintcache'
  cache:
    key: eslint-$CI_COMMIT_REF_NAME-cache
    paths:
      - .eslintcache
    policy: pull-push
  rules:
    - if: '$ESLINT_MODE == "strict"'
      changes:
        - assets/*
        - assets/**/*
        - package.json
        - pnpm-lock.yaml
        - webpack/*
        - webpack/**/*
      when: on_success
      allow_failure: false
    - if: '$ESLINT_MODE == "relaxed"'
      changes:
        - assets/*
        - assets/**/*
        - package.json
        - pnpm-lock.yaml
        - webpack/*
        - webpack/**/*
      when: on_success
      allow_failure: true
    - if : '$CI_COMMIT_MESSAGE =~ /CI_BUILD/ && $ESLINT_MODE == "strict"'
      when: on_success
      allow_failure: false
    - if : '$CI_COMMIT_MESSAGE =~ /CI_BUILD/ && $ESLINT_MODE == "relaxed"'
      when: on_success
      allow_failure: true
    - if: '$ESLINT_MODE == "disabled"'
      when: never
